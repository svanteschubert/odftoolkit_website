=Google Summer of Code Ideas=
__TOC__

==Welcome Students!==
Want to spend your summer contributing full-time to the ODF community, and get paid for it?
The ODF Toolkit Union might give you ideas and opportunity to do so.

Most ideas listed here have a contact person associated with them. Please get in touch with them earlier rather than later to develop your idea into a complete application. You can find many of them on Freenode's IRC network usually under the same username. If there is no contact information, please join the [http://odftoolkit.org/projects/odfdom/lists dev@odfdom.odftoolkit.org] mailing list or #odftoolkit on the Freenode IRC network (ie. irc://freenode/odftoolkit), and we will work with you to find a mentor and discuss your idea.

You don't have to apply for one of these ideas! You can come up with your own, and as long as it fits into the ODF Toolkit Union, we'll be happy to work with you to develop it. Remember, your project needs to have deliverables in less than 3 months of work in most cases. Be ambitious but not too ambitious ;)

We will know whether ODF Toolkit Union is accepted by 18 March, and you can apply starting March 29 -- the earlier the better! 

==Ideas==
Discussions about these ideas should take place on the mailing list provided you might CC the contacts as well. Please go through the existing discussions about your idea in the mailing list archives before posting.

===RDF Metadata Support for ODFDOM===
New in ODF 1.2 is the ability to annotate parts of the document and the document itself with arbitrary metadata using the W3C RDF standard.

This should be a new feature of the ODFDOM library.
<h4>Skills</h4>
* XML
* Java
* RDF
<h4>Contact</h4>
* [http://odftoolkit.org/projects/odfdom/lists dev@odfdom.odftoolkit.org]
* svanteschubert@ odftoolkit.org
<h4>More Information</h4>
* http://odftoolkit.org/projects/odfdom/pages/Home
* http://blogs.sun.com/GullFOSS/entry/odfdom_0_8_the_new
* http://blogs.sun.com/GullFOSS/entry/new_extensible_metadata_support_with
----
===OpenFormula Evaluator===
New in ODF 1.2 is a spreadsheet formula language called OpenFormula.  One idea is to implement OpenFormula in Java.  A goal could be to make a strict interpretation of the ODF 1.2 standard and write code that would both act as a formula validator as well as a formula evaluator. 

This should be a new feature of the ODFDOM library.
<h4>Skills</h4>
* Java
* BNF
* Parser generators, like JavaCC
* Spreadsheets
<h4>Contact</h4>
* [http://odftoolkit.org/projects/odfdom/lists dev@odfdom.odftoolkit.org]
* rcweir@odftoolkit.org
<h4>More Information</h4>
* http://odftoolkit.org/projects/odfdom/pages/Home
* http://www.oasis-open.org/committees/download.php/36768/OpenDocument-v1.2-part2-cd01.pdf
----
===Signature Support for ODFDOM===
Part of the [http://docs.oasis-open.org/office/v1.2/part3/cd01/OpenDocument-v1.2-part3-cd01.html#a_4_Digital_Signatures_File ODF 1.2 Package specification] is the signing of documents.  
Sources for typed DOM tree should be generated by our [new source generator] similar as done for ODFDOM DOM sources.
The API and the test documents have to be created first with help from the dev list (see contact) according to the OIC TC discussed approach (see more information).

This should be a new feature of the ODFDOM library.
<h4>Skills</h4>
* XML
* Java
<h4>Contact</h4>
* [http://odftoolkit.org/projects/odfdom/lists dev@odfdom.odftoolkit.org]
* svanteschubert@odftoolkit.org
<h4>More Information</h4>
Regarding API and testing:
* http://lists.oasis-open.org/archives/oic/201001/msg00043.html
* http://lists.oasis-open.org/archives/oic/201002/msg00005.html
* http://lists.oasis-open.org/archives/oic/201003/msg00008.html
----
===Encryption Support for ODFDOM===
Part of the [http://docs.oasis-open.org/office/v1.2/part3/cd01/OpenDocument-v1.2-part3-cd01.html#a_4_Digital_Signatures_File ODF 1.2 Package specification] is the encryption of documents.  
Sources for typed DOM tree should be generated for the manifest.xml by our [new source generator] similar as done for ODFDOM DOM sources.
The API and the test documents have to be created first with help from the dev list (see contact) according to the OIC TC discussed approach (see more information).

This should be a new feature of the ODFDOM library.
<h4>Skills</h4>
* XML
* Java
<h4>Contact</h4>
* [http://odftoolkit.org/projects/odfdom/lists dev@odfdom.odftoolkit.org]
* svanteschubert@odftoolkit.org
<h4>More Information</h4>
Regarding API and testing:
* http://lists.oasis-open.org/archives/oic/201001/msg00043.html
* http://lists.oasis-open.org/archives/oic/201002/msg00005.html
* http://lists.oasis-open.org/archives/oic/201003/msg00008.html
----
===ODFDOM API for Python/JPython===
Generate a typed DOM API for Python by elaborating the Python code template and implementing the ZIP package access as part of the package layer.
Laying the basement for further development, designing an ODFDOM Package and typed DOM API basic in design but with perhaps generic differences due to language differences.
<h4>Skills</h4>
* XML
* Python
<h4>Contact</h4>
* [http://odftoolkit.org/projects/odfdom/lists dev@odfdom.odftoolkit.org]
* svanteschubert@odftoolkit.org
----
===ODFDOM API for Ruby/JRuby===
Generate a typed DOM API for Ruby by elaborating a JRuby code template and implementing the ZIP package access as part of the package layer.
Laying the basement for further development, designing an ODFDOM Package and typed DOM API basic in design but with perhaps generic differences due to language differences.  
<h4>Skills</h4>
* XML
* Ruby
<h4>Contact</h4>
* [http://odftoolkit.org/projects/odfdom/lists dev@odfdom.odftoolkit.org]
* svanteschubert@odftoolkit.org
----
===ODFDOM API for .Net/C# ===
Generate a typed DOM API for .Net with C# by elaborating a C# code template
and implementing the ZIP package access as part of the package layer.
Laying the basement for further development, designing an ODFDOM Package
and typed DOM API basic in design but with perhaps generic differences
due to language differences.
<h4>Skills</h4>
* XML
* C#
<h4>Contact</h4>
* [http://odftoolkit.org/projects/odfdom/lists dev@odfdom.odftoolkit.org]
* darius.damalakas@odftoolkit.org
----
===Document generation library extensions for AODL library; .Net/C# ===
A real world company has agreed to open-source code which is allows to
populate documents with data. The library is based on Boo, a
wrist-friendly python-like language for .Net, and is used a scripting
language in .Net environment. The goal of the project would be
three-fold:
1. Reuse open-sourced code to create a new library AODL.Doc.Boo
2. Enhance some of the features by making changes to both of the libraries.
3. Ensure that performance requirements are met (to be detailed later)
<h4>Skills</h4>
* XML
* C#
* Boo
<h4>Contact</h4>
* [http://odftoolkit.org/projects/odfdom/lists dev@odfdom.odftoolkit.org]
* darius.damalakas@odftoolkit.org
----

'''Note: Several other ideas are in queue and follow up here during the next days, while existing will be further elaborated..'''
